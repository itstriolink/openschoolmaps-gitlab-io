variables:
  BUILD_IMAGE: $CI_REGISTRY_IMAGE/build:$CI_COMMIT_REF_SLUG

image: $BUILD_IMAGE

stages:
- prebuild
- build
- pages


######################################################################
# prebuild
######################################################################

# Builds the Docker image $BUILD_IMAGE for subsequent build steps
# if its inputs have changed.
build_image_if_changed: &build_image_job
  stage: prebuild
  image: docker:latest
  services:
    - docker:dind  # required for Docker-in-Docker on gitlab.com
  only: &build_image_condition
    changes:
      - docker.build/*
      - .gitlab-ci.yml
      - pages/requirements.txt
  script:
    - &docker_login_cmd "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY"
    - &build_image_script
      - mv pages/requirements.txt docker.build
      - cd docker.build
      - docker build --tag $BUILD_IMAGE -f Dockerfile.build .
      - docker push $BUILD_IMAGE


# Builds the Docker image $BUILD_IMAGE for subsequent build steps
# if its inputs haven't changed but the image is missing.
build_image_if_missing:
  <<: *build_image_job
  only: null
  except:
    <<: *build_image_condition
  script:
    - *docker_login_cmd
    - docker pull $BUILD_IMAGE && exit  # If the image is available, there's
                                        # nothing left to do in this job.
    - *build_image_script


######################################################################
# build
######################################################################

PDFs:
  stage: build
  variables:
    LANG: de_CH.utf8
  tags:
  - docker
  script:
  - ./build.py
  artifacts:
    expire_in: 3 mos
    paths:
    - lehrmittel/**/*.pdf
    - lehrmittel/**/**/*.pdf
    - lehrmittel/OpenStreetMap Tagging Cheatsheet.docx
    - lehrmittel/OpenStreetMap Tagging Cheatsheet.pdf

QGIS excercise data:
  stage: build
  script:
  # Dummy script,
  # because we only need to collect some files from the Git repo as artifacts.
  - "true"
  artifacts:
    name: "Daten_Leitprogramm_QGIS"
    expire_in: 3 mos
    paths:
    - lehrmittel/einfuehrung_in_qgis/daten_leitprogramm_qgis/

autobahn excercise data:
  stage: build
  script:
  # Dummy script,
  # because we only need to collect some files from the Git repo as artifacts.
  - "true"
  artifacts:
    name: "Daten_autobahn"
    expire_in: 3 mos
    paths:
    - lehrmittel/geodaten-analyse_mit_qgis/vektordaten-analyse_mit_qgis/vektordaten-analyse_mit_qgis_autobahn/

gaemsen excercise data:
  stage: build
  script:
  # Dummy script,
  # because we only need to collect some files from the Git repo as artifacts.
  - "true"
  artifacts:
    name: "Input-Daten_gaemsen"
    expire_in: 3 mos
    paths:
    - lehrmittel/geodaten-analyse_mit_qgis/rasterdaten-analyse_mit_qgis/rasterdaten-analyse_mit_qgis_gaemsen_daten/
    
superset csv data:
  stage: build
  script:
  # Dummy script,
  # because we only need to collect some files from the Git repo as artifacts.
  - "true"
  artifacts:
    name: "Superset-Datentabellen"
    expire_in: 3 mos
    paths:
    - lehrmittel/einfuehrung_in_apache_superset/files/

build_pages:
  stage: build
  script:
  - cd pages/
  - ln -s /opt/pelican-{themes,plugins} .  # Pulls in repos provided by build image
  - pelican --fatal errors -s publishconf.py
  - mv .well-known/ public/.well-known
  artifacts:
    paths:
    - pages/public/


######################################################################
# pages
######################################################################

pages:
  stage: pages
  script:
  - mv pages/public/ .
  - mv lehrmittel/ public/
  only:
    refs:
      - master
  artifacts:
    paths:
    - public/
